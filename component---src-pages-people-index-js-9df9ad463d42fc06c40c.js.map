{"version":3,"file":"component---src-pages-people-index-js-9df9ad463d42fc06c40c.js","mappings":"+QAMMA,EAAW,SAAC,GAAD,IACfC,EADe,EACfA,KACAC,EAFe,EAEfA,MAFe,OAIfA,EAEI,gBAAC,EAAAC,EAAD,CACEC,IAAKH,EACLI,UAAU,qBACVH,MAAOA,EAAMI,gBAAgBC,kBAI/B,uBAAKF,UAAU,sBACb,gBAAC,IAAD,MAdS,EAmBjBL,EAASQ,aAAe,CACtBN,MAAO,MAYT,QCsCA,EAhEe,SAAC,GAAD,IACbO,EADa,EACbA,SADa,OAGb,uBAAKJ,UAAU,UACb,+BACE,8BACE,oCAGA,gBAAC,IAAD,CAAiBK,KAAMC,EAAAA,IAASC,KAAK,QAEvC,sBAAIP,UAAU,gBAEVI,EAASI,KAAI,SAACC,GAAD,OACX,sBAAIC,IAAKD,EAAOE,KAAKC,YAAYhB,MAC/B,gBAAC,EAAD,CACEC,MAAOY,EAAOE,KAAKC,YAAYf,MAC/BD,KAAMa,EAAOE,KAAKC,YAAYhB,OAEhC,2BACE,0BAAKa,EAAOE,KAAKC,YAAYhB,MAE3Ba,EAAOE,KAAKC,YAAYC,OAEtB,0BAAKJ,EAAOE,KAAKC,YAAYC,OAI/BJ,EAAOE,KAAKC,YAAYE,OAEtB,gBAAC,IAAD,CACEd,UAAU,qBACVe,GAAE,UAAYN,EAAOE,KAAKC,YAAYE,OAErCL,EAAOE,KAAKC,YAAYE,OAI/B,uBAAKE,wBAAyB,CAAEC,OAAQR,EAAOE,KAAKO,SAzB7C,MAbR,E,UCmCf,EAxCwB,WACtB,IAAMC,GAAQC,EAAAA,EAAAA,gBAAe,cA8BvBhB,GAAWiB,EAAAA,EAAAA,GAAaF,EAAMf,SAASkB,MAAO,CAAC,QAAS,SAE9D,OACElB,EAASmB,OAAS,EACd,gBAAC,EAAD,CAAQnB,SAAUA,IAClB,IAEP,E,UChCD,EAPkB,kBAChB,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKS,MAAM,WACX,gBAAC,EAAD,MAHc,C,uBCNlB,IAAIW,EAAQ,EAAQ,MAEpB,SAASC,EAAmBC,GACxB,OAAOF,EAAMG,cAAc,MAAMD,EAAM,CAACF,EAAMG,cAAc,QAAQ,CAAC,IAAM,GAAG,wBAAwBH,EAAMG,cAAc,OAAO,CAAC,IAAM,GAAG,SAASH,EAAMG,cAAc,OAAO,CAAC,EAAI,mQAAmQ,IAAM,KACjc,CAEAF,EAAkBtB,aAAe,CAAC,aAAa,6BAA6B,QAAU,eAEtFyB,EAAOC,QAAUJ,EAEjBA,EAAkBK,QAAUL,C","sources":["webpack://gatsby-starter-default/./src/components/people/portrait.js","webpack://gatsby-starter-default/./src/components/people/people.js","webpack://gatsby-starter-default/./src/components/people/people-container.js","webpack://gatsby-starter-default/./src/pages/people/index.js","webpack://gatsby-starter-default/./src/images/people/placeholder.inline.svg"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { GatsbyImage } from 'gatsby-plugin-image';\n\nimport Placeholder from '../../images/people/placeholder.inline.svg';\n\nconst Portrait = ({\n  name,\n  image,\n}) => (\n  image\n    ? (\n      <GatsbyImage\n        alt={name}\n        className=\"people__list-image\"\n        image={image.childImageSharp.gatsbyImageData}\n      />\n    )\n    : (\n      <div className=\"people__list-image\">\n        <Placeholder />\n      </div>\n    )\n);\n\nPortrait.defaultProps = {\n  image: null,\n};\n\nPortrait.propTypes = {\n  image: PropTypes.shape({\n    childImageSharp: PropTypes.shape({\n      gatsbyImageData: PropTypes.shape({}),\n    }),\n  }),\n  name: PropTypes.string.isRequired,\n};\n\nexport default Portrait;\n","/* eslint-disable react/no-danger */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\n\nimport Link from '../link/link';\nimport Portrait from './portrait';\n\nimport './people.css';\n\nconst People = ({\n  markdown,\n}) => (\n  <div className=\"people\">\n    <section>\n      <header>\n        <h1>\n        People\n        </h1>\n        <FontAwesomeIcon icon={faUsers} size=\"2x\" />\n      </header>\n      <ul className=\"people__list\">\n        {\n          markdown.map((person) => (\n            <li key={person.node.frontmatter.name}>\n              <Portrait\n                image={person.node.frontmatter.image}\n                name={person.node.frontmatter.name}\n              />\n              <div>\n                <h2>{person.node.frontmatter.name}</h2>\n                {\n                  person.node.frontmatter.title\n                  && (\n                    <h3>{person.node.frontmatter.title}</h3>\n                  )\n                }\n                {\n                  person.node.frontmatter.email\n                  && (\n                    <Link\n                      className=\"person__list-email\"\n                      to={`mailto:${person.node.frontmatter.email}`}\n                    >\n                      {person.node.frontmatter.email}\n                    </Link>\n                  )\n                }\n                <div dangerouslySetInnerHTML={{ __html: person.node.html }} />\n              </div>\n            </li>\n          ))\n        }\n      </ul>\n    </section>\n  </div>\n);\n\nPeople.propTypes = {\n  markdown: PropTypes.arrayOf(\n    PropTypes.shape({\n      node: PropTypes.shape({\n        frontmatter: PropTypes.shape({\n          email: PropTypes.string,\n          image: PropTypes.shape({}),\n          name: PropTypes.string,\n          title: PropTypes.string,\n        }),\n        html: PropTypes.node,\n      }),\n    }),\n  ).isRequired,\n};\n\nexport default People;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport People from './people';\n\nimport sortMarkdown from '../../utils/sort-markdown';\n\nconst PeopleContainer = () => {\n  const query = useStaticQuery(\n    graphql`\n      query {\n        markdown: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/people/\" } }) {\n          edges {\n            node {\n              html\n              frontmatter {\n                email\n                image {\n                  childImageSharp {\n                    gatsbyImageData(\n                      quality: 70,\n                      placeholder: BLURRED,\n                      height: 300,\n                      width: 300,\n                    )\n                  }\n                }\n                name\n                title\n                order\n              }\n            }\n          }\n        }\n      }\n    `,\n  );\n\n  const markdown = sortMarkdown(query.markdown.edges, ['order', 'name']);\n\n  return (\n    markdown.length > 0\n      ? <People markdown={markdown} />\n      : null\n  );\n};\n\nexport default PeopleContainer;\n","import React from 'react';\n\nimport Layout from '../../components/layout/layout';\nimport People from '../../components/people/people-container';\nimport SEO from '../../components/seo/seo';\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"People\" />\n    <People />\n  </Layout>\n);\n\nexport default IndexPage;\n","var React = require('react');\n\nfunction PlaceholderInline (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Placeholder portrait\"),React.createElement(\"desc\",{\"key\":1},\"image\"),React.createElement(\"path\",{\"d\":\"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\",\"key\":2})]);\n}\n\nPlaceholderInline.defaultProps = {\"aria-label\":\"Placeholder portrait image\",\"viewBox\":\"0 0 448 512\"};\n\nmodule.exports = PlaceholderInline;\n\nPlaceholderInline.default = PlaceholderInline;\n"],"names":["Portrait","name","image","G","alt","className","childImageSharp","gatsbyImageData","defaultProps","markdown","icon","faUsers","size","map","person","key","node","frontmatter","title","email","to","dangerouslySetInnerHTML","__html","html","query","useStaticQuery","sortMarkdown","edges","length","React","PlaceholderInline","props","createElement","module","exports","default"],"sourceRoot":""}